import { ThemeType } from "../types";

export const takoTheme: ThemeType = {
  light: {
    id: 18,
    name: "Tako", // getString('appearanceScreen.theme.tako') will return this string
    isDark: false,
    primary: "#66577E",
    onPrimary: "rgb(255, 255, 255)",
    primaryContainer: "rgb(236, 220, 255)",
    onPrimaryContainer: "rgb(39, 0, 87)",
    secondary: "rgb(99, 91, 112)",
    onSecondary: "rgb(255, 255, 255)",
    secondaryContainer: "rgb(234, 222, 247)",
    onSecondaryContainer: "rgb(31, 24, 42)",
    tertiary: "rgb(127, 82, 92)",
    onTertiary: "rgb(255, 255, 255)",
    tertiaryContainer: "rgb(255, 217, 224)",
    onTertiaryContainer: "rgb(50, 16, 26)",
    background: "#F7F5FF",
    onBackground: "#21212E",
    surface: "#F7F5FF",
    onSurface: "#21212E",
    error: "rgb(186, 26, 26)",
    onError: "rgb(255, 255, 255)",
    errorContainer: "rgb(255, 218, 214)",
    onErrorContainer: "rgb(65, 0, 2)",
    outline: "rgb(122, 117, 127)",
    inverseSurface: "rgb(50, 48, 51)",
    inverseOnSurface: "rgb(245, 239, 244)",
    inversePrimary: "#F3B375",
    danger: "#ff4444", // Add any additional danger color here if necessary
  },
  dark: {
    id: 19,
    name: "Tako", // getString('appearanceScreen.theme.tako') will return this string
    isDark: true,
    primary: "#F3B375",
    onPrimary: "rgb(61, 28, 111)",
    primaryContainer: "rgb(85, 53, 135)",
    onPrimaryContainer: "rgb(236, 220, 255)",
    secondary: "rgb(206, 194, 219)",
    onSecondary: "rgb(52, 45, 64)",
    secondaryContainer: "rgb(75, 67, 87)",
    onSecondaryContainer: "rgb(234, 222, 247)",
    tertiary: "rgb(241, 183, 195)",
    onTertiary: "rgb(75, 37, 47)",
    tertiaryContainer: "rgb(100, 59, 69)",
    onTertiaryContainer: "rgb(255, 217, 224)",
    background: "#21212E",
    onBackground: "rgb(230, 225, 230)",
    surface: "#21212E",
    onSurface: "rgb(230, 225, 230)",
    error: "rgb(255, 180, 171)",
    onError: "rgb(105, 0, 5)",
    errorContainer: "rgb(147, 0, 10)",
    onErrorContainer: "rgb(255, 180, 171)",
    outline: "rgb(149, 142, 153)",
    inverseSurface: "rgb(230, 225, 230)",
    inverseOnSurface: "rgb(50, 48, 51)",
    inversePrimary: "#66577E",
    danger: "#ff4444", // Add any additional danger color here if necessary
  },
};
